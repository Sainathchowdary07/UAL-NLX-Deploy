AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Capabilities:
    - CAPABILITY_NAMED_IAM
    - CAPABILITY_AUTO_EXPAND
Resources:
  MyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: yf-CallFlowFullAccess
      Description: My custom policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - sms-voice:*
            Resource: "*"

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: MyLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
        - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        - "arn:aws:iam::aws:policy/AWSLambdaExecute"
        - "arn:aws:iam::aws:policy/service-role/AmazonSNSRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/yf-CallFlowFullAccess"

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: dtv-createSessionToken-Test
      Runtime: nodejs14.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: dtv-nlx-s3-cep-test
        S3Key: test-code.zip
      Events:
        createSessionToken:
          Type: Api
          Properties:
            Path: /ivr/dtv-createSessionToken
            Method: POST
